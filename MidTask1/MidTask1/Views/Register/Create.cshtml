@model MidTask1.DTOs.RegisterDTO

@{
    ViewBag.Title = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-image: url('background.jpg'); /* Add your background image URL here */
            background-size: cover;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .register-form {
            background: rgba(255, 255, 255, 0.85);
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: 400px;
        }

            .register-form h2 {
                text-align: center;
                margin-bottom: 20px;
                font-weight: bold;
            }

            .register-form .form-control {
                border-radius: 20px;
            }

            .register-form .btn-primary {
                border-radius: 20px;
                width: 100%;
            }

            .register-form .alert {
                border-radius: 20px;
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="register-form">
            <h2>Register</h2>
            <!-- Display success or error messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger">
                    @ViewBag.ErrorMessage
                </div>
            }

            <!-- Registration Form -->
            @using (Html.BeginForm("Create", "Register", FormMethod.Post))
            {
                <div class="mb-3">
                    @Html.LabelFor(model => model.FirstName, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", placeholder = "Enter First Name" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.LastName, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", placeholder = "Enter Last Name" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Email, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Enter Email" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Phone, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", placeholder = "Enter Phone Number" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Enter Password" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Confirmpwd, new { @class = "form-label" })
                    @Html.PasswordFor(model => model.Confirmpwd, new { @class = "form-control", placeholder = "Confirm Password" })
                    @Html.ValidationMessageFor(model => model.Confirmpwd, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Gender, new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new[] { "Male", "Female", "Other" }), "Select Gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Role, new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Role, new SelectList(new[] { "User", "Admin" }), "Select Role", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-primary">Register</button>
            }
        </div>
    </div>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
</body>
</html>
