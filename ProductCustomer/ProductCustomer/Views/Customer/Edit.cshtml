@model ProductCustomer.DTOs.CustomerDTO
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Customer</h2>

@using (Html.BeginForm("Edit", "Customer", FormMethod.Post, new { @class = "needs-validation" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.id)

    <div class="mb-3">
        <label class="form-label">First Name</label>
        @Html.TextBoxFor(m => m.fname, new { @class = "form-control", maxlength = "100" })
        @Html.ValidationMessageFor(m => m.fname, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Last Name</label>
        @Html.TextAreaFor(m => m.lname, new { @class = "form-control", maxlength = "500" })
        @Html.ValidationMessageFor(m => m.lname, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label>
        @Html.TextBoxFor(m => m.email, new { @class = "form-control", type = "email", maxlength = "50" })
        @Html.ValidationMessageFor(m => m.email, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Phone</label>
        @Html.TextBoxFor(m => m.phone, new { @class = "form-control", type = "text", min = "11" })
        @Html.ValidationMessageFor(m => m.phone, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Address</label>
        @Html.TextBoxFor(m => m.address, new { @class = "form-control", type = "text", maxlength = "500" })
        @Html.ValidationMessageFor(m => m.address, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <label class="form-label">Date Joined</label>
        @Html.TextBoxFor(m => m.date_joined, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(m => m.date_joined, "", new { @class = "text-danger" })
    </div>






    <div class="mb-3">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Save Changes</button>
    @Html.ActionLink("Back to List", "List", null, new { @class = "btn btn-secondary" })
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            //// Custom client-side validation for category
            //$.validator.addMethod("validCategory", function (value, element) {
            //    var validCategories = ["electronics", "clothing", "furniture", "books"];
            //    return this.optional(element) || validCategories.includes(value.toLowerCase());
            //}, "Please select a valid category.");

            // Add custom validation rules
            $("#category").rules("add", {
                validCategory: true
            });
        });
    </script>
}